services.turnup.app.ecs.create_service:
  serviceName: ${APP_NAME}
  cluster: $(cluster.turnup.ecs.create_cluster.cluster.clusterArn)
  taskDefinition: $(tasks.turnup.app.ecs.register_task_definition.taskDefinition.taskDefinitionArn)
  desiredCount: ${APP_CONTAINER_TASK_COUNT}
  loadBalancers:
    - targetGroupArn: $(targets.turnup.app.elb.create_target_group.TargetGroups.0.TargetGroupArn)
      containerName: ${APP_NAME}
      containerPort: ${APP_CONTAINER_PORT}
  launchType: FARGATE
  networkConfiguration:
    awsvpcConfiguration:
      subnets: $(subnets.get_subnet_ids)
      securityGroups:
        - $(security.turnup.app.ec2.describe_security_groups.SecurityGroups.0.GroupId)
      assignPublicIp: ENABLED
---
services.turnup.wss.ecs.create_service:
  serviceName: ${WSS_NAME}
  cluster: $(cluster.turnup.ecs.create_cluster.cluster.clusterArn)
  taskDefinition: $(tasks.turnup.wss.ecs.register_task_definition.taskDefinition.taskDefinitionArn)
  desiredCount: ${WSS_CONTAINER_TASK_COUNT}
  loadBalancers:
    - targetGroupArn: $(targets.turnup.wss.elb.create_target_group.TargetGroups.0.TargetGroupArn)
      containerName: ${WSS_NAME}
      containerPort: ${WSS_CONTAINER_PORT}
  launchType: FARGATE
  networkConfiguration:
    awsvpcConfiguration:
      subnets: $(subnets.get_subnet_ids)
      securityGroups:
        - $(security.turnup.wss.ec2.describe_security_groups.SecurityGroups.0.GroupId)
      assignPublicIp: ENABLED
