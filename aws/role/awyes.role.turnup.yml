role.turnup.iam.create_role:
  RoleName: ${SAGE_ROLE_NAME}
  Description: Role for Sage on AWS
  AssumeRolePolicyDocument: >
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Principal": { 
            "Service": [
              "ec2.amazonaws.com",
              "ecs.amazonaws.com",
              "ecs-tasks.amazonaws.com",
              "route53.amazonaws.com",
              "rds.amazonaws.com",
              "lambda.amazonaws.com",
              "secretsmanager.amazonaws.com",
              "ssm.amazonaws.com",
              "s3.amazonaws.com"
            ]
          },
          "Action": "sts:AssumeRole"
        }
      ]
    }
role.turnup.ec2.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
role.turnup.logs.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/CloudWatchFullAccessV2
role.turnup.lambda.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/AWSLambda_FullAccess
role.turnup.s3.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/AmazonS3FullAccess
role.turnup.ssm.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/AmazonSSMFullAccess
role.turnup.secrets.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/SecretsManagerReadWrite
role.turnup.kms.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/service-role/ROSAKMSProviderPolicy
role.turnup.rds.iam.attach_role_policy:
  RoleName: ${SAGE_ROLE_NAME}
  PolicyArn: arn:aws:iam::aws:policy/AmazonRDSFullAccess
role.turnup.iam.get_role:
  RoleName: ${SAGE_ROLE_NAME}
